<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core">

<h:head>
	<title><h:outputFormat
			value="#{msg['dialog.biobank.headline']}" /></title>
	<h:outputStylesheet name="histo.css" value="histo.css" />
</h:head>

<h:body styleClass="defaultDialogLayout infoDialog">

	<h:form enctype="multipart/form-data" id="dialogContent">

		<div class="defaulDilaogHeaderDivWithBackground">
			<h:panelGrid style="width:100%;" columns="2"
				styleClass="noBordersAll noPaddingAll collapsedBordersAll">
				<h:outputLabel value="#{msg['dialog.biobank.headline']}" />
				<p:commandLink title="#{msg['general.close']}" style="float:right;"
					styleClass="noUnderlineAtLink"
					onclick="$('#dialogContent\\:closeBtn').click();return false;">
					<i class="fa fa-fw fa-times" />
				</p:commandLink>
			</h:panelGrid>
		</div>

		<div class="contentDiv" style="height: 520px">

			<p:dataTable var="stainingRow" styleClass="stainingTable"
				value="#{commonDataHandlerAction.selectedTask.stainingTableRows}"
				scrollable="true" scrollHeight="150" rowIndexVar="index">

				<!-- sample -->
				<p:column styleClass="columnSample"
					headerText="#{msg['body.receiptlog.slide.headline.sample']}">
					<h:panelGroup rendered="#{stainingRow.sampleType}">

						<h:panelGroup layout="block" style="width: 90%; min-height:20px">
							<p:commandLink process="@this"
								update=":dialogContent:idInputPannelInput"
								actionListener="#{commonDataHandlerAction.setSelectedStainingTableChooser(stainingRow)}"
								oncomplete="PF('idInputPannel').show('#{component.clientId}')">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.sample']} #{stainingRow.sample.sampleID}" />

								<h:panelGroup rendered="#{stainingRow.sample.idManuallyAltered}">
									<i class="fa fa-fw fa-chain"
										title="#{msg['body.statiningView.idManuallyAltered']}" />
								</h:panelGroup>
							</p:commandLink>
						</h:panelGroup>

					</h:panelGroup>
				</p:column>

				<!-- Block -->
				<p:column styleClass="columnBlock"
					headerText="#{msg['body.receiptlog.slide.headline.block']}">
					<h:panelGroup rendered="#{stainingRow.blockType}">
						<h:panelGroup layout="block" style="width: 90%; min-height:20px">
							<p:commandLink process="@this"
								update=":dialogContent:idInputPannelInput"
								actionListener="#{commonDataHandlerAction.setSelectedStainingTableChooser(stainingRow)}"
								oncomplete="PF('idInputPannel').show('#{component.clientId}')">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.block']} #{stainingRow.block.blockID}" />
								<h:panelGroup rendered="#{stainingRow.block.idManuallyAltered}">
									<i class="fa fa-fw fa-chain"
										title="#{msg['body.statiningView.idManuallyAltered']}" />
								</h:panelGroup>
							</p:commandLink>
						</h:panelGroup>
					</h:panelGroup>
				</p:column>

				<!-- staining - name -->
				<p:column styleClass="columnStainingID"
					headerText="#{msg['body.receiptlog.slide.headline.staining.id']}">
					<h:panelGroup id="slideIDInput#{inner.index}" layout="block"
						style="width: 90%; min-height:20px">
						<p:commandLink process="@this"
							update=":dialogContent:idInputPannelInput"
							actionListener="#{commonDataHandlerAction.setSelectedStainingTableChooser(stainingRow)}"
							oncomplete="PF('idInputPannel').show('#{component.clientId}')">
							<h:outputLabel value="#{stainingRow.staining.slideID}" />

							<h:panelGroup
								rendered="#{stainingRow.staining.idManuallyAltered}">
								<i class="fa fa-fw fa-chain"
									title="#{msg['body.statiningView.idManuallyAltered']}" />
							</h:panelGroup>
						</p:commandLink>
					</h:panelGroup>
				</p:column>

				<!-- staining - commentary -->
				<p:column styleClass="columnCommentary"
					headerText="#{msg['body.receiptlog.slide.headline.staining.commentary']}">
					<h:panelGroup rendered="#{stainingRow.stainingType}">
						<p:selectOneMenu styleClass="smallInput" style="width: 90%"
							value="#{stainingRow.staining.commentary}" editable="true"
							disabled="#{!taskEditable}">

							<f:selectItems
								value="#{receiptlogViewHandlerAction.slideCommentary}"
								var="commentary" itemLabel="#{commentary.value}"
								itemValue="#{commentary.value}" />

							<p:ajax event="change" execute="@this"
								listener="#{diagnosisViewHandlerAction.onDataChange(stainingRow.staining,'log.settings.staining.update')}" />
						</p:selectOneMenu>
					</h:panelGroup>
				</p:column>

				<!-- Staining staining -->
				<p:column styleClass="columnStaining"
					headerText="#{msg['body.receiptlog.slide.headline.staining.staining']}">
					<h:panelGroup rendered="#{stainingRow.stainingType}">
						<h:outputText value="#{stainingRow.staining.slidePrototype.name}" />
					</h:panelGroup>
				</p:column>

				<p:column styleClass="columnStatus"
					headerText="#{msg['body.receiptlog.slide.headline.status']}">
					<!-- Sample status -->
					<h:panelGroup rendered="#{stainingRow.sampleType}">
						<!-- ********** Staining performed ********** -->
						<h:panelGroup
							rendered="#{taskStatusHandler.isStainingCompleted(stainingRow.sample)}">
							<i class="fa fa-fw fa-check-circle icon-green"
								title="#{msg['body.statiningView.status.performed']}" />
						</h:panelGroup>
					</h:panelGroup>
					<!-- Block status -->
					<h:panelGroup rendered="#{stainingRow.blockType}">
						<!-- ********** Staining performed ********** -->
						<h:panelGroup
							rendered="#{taskStatusHandler.isStainingCompleted(stainingRow.block)}">
							<i class="fa fa-fw fa-check-circle icon-green"
								title="#{msg['body.statiningView.status.performed']}" />
						</h:panelGroup>
					</h:panelGroup>

					<!-- Slide status -->
					<h:panelGroup rendered="#{stainingRow.stainingType}">
						<!-- ********** Staining performed ********** -->
						<h:panelGroup rendered="#{stainingRow.staining.stainingCompleted}">
							<i class="fa fa-fw fa-check-circle icon-green"
								title="#{msg['body.statiningView.status.performed']}" />
						</h:panelGroup>

						<h:panelGroup rendered="#{stainingRow.staining.reStaining}">
							<i class="fa fa-fw fa-th-list icon-orange"
								title="#{msg['body.statiningView.status.restaining']}" />
						</h:panelGroup>
					</h:panelGroup>
				</p:column>

				<!-- options -->
				<p:column
					styleClass="columnOptions #{stainingRow.even ? 'ui-datatable-odd' : ''}">
					<f:facet name="header">
						<h:outputLabel
							value="#{msg['body.receiptlog.slide.headline.options']}"></h:outputLabel>
						<p:commandLink styleClass="noUnderlineAtLink"
							id="quickTaskSettings"
							actionListener="#{slideNamingDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask)}">
							<i class="fa fa-wrench" />
						</p:commandLink>
					</f:facet>
					<!-- Block -->
					<h:panelGroup rendered="#{stainingRow.blockType}"
						style="float: right">
						<!-- ********** New Staining Button ********** -->
						<p:commandLink title="#{msg['body.statiningView.newStaining']}"
							styleClass="noUnderlineAtLink" disabled="#{!taskEditable}"
							actionListener="#{addSlidesDialogHandler.initAndPrepareBean(stainingRow.block)}">
							<i class="fa fa-fw fa-paint-brush"></i>
						</p:commandLink>
					</h:panelGroup>

					<!-- Staining -->
					<h:panelGroup rendered="#{stainingRow.stainingType}"
						style="float: right">
						<!-- ********** Delete Button ********** -->
						<p:commandLink styleClass="noUnderlineAtLink"
							disabled="#{!taskEditable or true}"
							title="#{msg['body.statiningView.archiveStaining']}"
							actionListener="#{deleteTaskEntityDialog.initAndPrepareBean(stainingRow.staining.task,stainingRow.staining)}">
							<i class="fa fa-fw fa-times-circle" />
						</p:commandLink>
					</h:panelGroup>
				</p:column>
			</p:dataTable>


			<p:overlayPanel id="idInputPannel" onHide="alert();"
				styleClass="defaultOverlayPanel" widgetVar="idInputPannel"
				hideEffect="fade" hideEvent="none" showEvent="none">
				<p:inputText id="idInputPannelInput"
					value="#{commonDataHandlerAction.selectedStainingTableChooser.IDText}" />
			</p:overlayPanel>

			<p:scrollPanel style="width:90% !important;height:500px">
				<p:panelGrid styleClass="stainingTable highlightedDataTable"
					style="width:100%">
					<f:facet name="header">
						<p:row>
							<p:column styleClass="columnSample">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.sample']}"></h:outputLabel>
							</p:column>
							<p:column styleClass="columnBlock">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.block']}"></h:outputLabel>
							</p:column>
							<p:column styleClass="columnStainingID">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.staining.id']}"></h:outputLabel>
							</p:column>
							<p:column styleClass="columnCommentary">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.staining.commentary']}"></h:outputLabel>
							</p:column>
							<p:column styleClass="columnStaining">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.staining.staining']}"></h:outputLabel>
							</p:column>
							<p:column styleClass="columnStatus">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.status']}"></h:outputLabel>
							</p:column>
							<p:column styleClass="columnOptions">
								<h:outputLabel
									value="#{msg['body.receiptlog.slide.headline.options']}"></h:outputLabel>
								<p:commandLink styleClass="noUnderlineAtLink"
									id="quickTaskSettings"
									actionListener="#{slideNamingDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask)}">
									<i class="fa fa-wrench" />
								</p:commandLink>

							</p:column>
						</p:row>
					</f:facet>

					<c:forEach varStatus="inner"
						items="#{commonDataHandlerAction.selectedTask.stainingTableRows}"
						var="stainingRow">
						<p:row styleClass="#{stainingRow.even ? 'ui-datatable-odd' : ''}">

							<!-- Sample -->
							<p:column styleClass="columnSample">
								<h:panelGroup rendered="#{stainingRow.sampleType}">

									<h:panelGroup id="sampleIDInput#{inner.index}" layout="block"
										style="width: 90%; min-height:20px">
										<h:outputLabel
											value="#{msg['body.receiptlog.slide.sample']} #{stainingRow.sample.sampleID}" />

										<h:panelGroup
											rendered="#{stainingRow.sample.idManuallyAltered}">
											<i class="fa fa-fw fa-chain"
												title="#{msg['body.statiningView.idManuallyAltered']}" />
										</h:panelGroup>
									</h:panelGroup>

									<p:overlayPanel for="sampleIDInput#{inner.index}"
										showEffect="fade"
										widgetVar="sampleIDInputPannel#{inner.index}"
										hideEffect="fade" showEvent="click" hideEvent="click"
										onHide="sampleIDChangeTableReset#{inner.index}()">
										<h:panelGrid columns="3">
											<p:inputText value="#{stainingRow.sample.sampleID}"
												id="sampleIDChangeTable#{inner.index}" />

											<p:commandButton value="#{msg['general.save']}"
												actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.sample,true)}"
												oncomplete="PF('sampleIDInputPannel#{inner.index}').hide()" />

											<p:commandButton
												value="#{msg['body.statiningView.idManuallyAltered.reset']}"
												actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.sample,false)}"
												oncomplete="PF('sampleIDInputPannel#{inner.index}').hide()" />

										</h:panelGrid>

										<!-- reset on hide -->
										<p:remoteCommand name="sampleIDChangeTableReset#{inner.index}"
											process="@this" update="sampleIDChangeTable#{inner.index}">
											<p:resetInput target="sampleIDChangeTable#{inner.index}" />
										</p:remoteCommand>
									</p:overlayPanel>
								</h:panelGroup>
							</p:column>

							<!-- Block -->
							<p:column styleClass="columnBlock">
								<h:panelGroup rendered="#{stainingRow.blockType}">

									<h:panelGroup id="blockIDInput#{inner.index}" layout="block"
										style="width: 90%; min-height:20px">
										<h:outputLabel
											value="#{msg['body.receiptlog.slide.block']} #{stainingRow.block.blockID}" />
										<h:panelGroup
											rendered="#{stainingRow.block.idManuallyAltered}">
											<i class="fa fa-fw fa-chain"
												title="#{msg['body.statiningView.idManuallyAltered']}" />
										</h:panelGroup>

									</h:panelGroup>
									<p:overlayPanel for="blockIDInput#{inner.index}"
										onHide="blockIDChangeTableReset#{inner.index}()"
										showEffect="fade" widgetVar="blockIDInputPannel#{inner.index}"
										hideEffect="fade" showEvent="click" hideEvent="click">
										<h:panelGrid columns="3">
											<p:inputText value="#{stainingRow.block.blockID}"
												id="blockIDChangeTable#{inner.index}" />
											<p:commandButton value="#{msg['general.save']}"
												actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.block,true)}"
												oncomplete="PF('blockIDInputPannel#{inner.index}').hide()" />

											<p:commandButton
												value="#{msg['body.statiningView.idManuallyAltered.reset']}"
												actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.block,false)}"
												oncomplete="PF('blockIDInputPannel#{inner.index}').hide()"></p:commandButton>
										</h:panelGrid>

										<!-- reset on hide -->
										<p:remoteCommand name="blockIDChangeTableReset#{inner.index}"
											process="@this" update="blockIDChangeTable#{inner.index}">
											<p:resetInput target="blockIDChangeTable#{inner.index}" />
										</p:remoteCommand>
									</p:overlayPanel>
								</h:panelGroup>
							</p:column>

							<!-- Staining Name -->
							<p:column styleClass="columnStainingID">
								<h:panelGroup rendered="#{stainingRow.stainingType}">

									<h:panelGroup id="slideIDInput#{inner.index}" layout="block"
										style="width: 90%; min-height:20px">

										<h:outputLabel value="#{stainingRow.staining.slideID}" />

										<h:panelGroup
											rendered="#{stainingRow.staining.idManuallyAltered}">
											<i class="fa fa-fw fa-chain"
												title="#{msg['body.statiningView.idManuallyAltered']}" />
										</h:panelGroup>

									</h:panelGroup>

									<p:overlayPanel for="slideIDInput#{inner.index}"
										showEffect="fade" widgetVar="slideIDInputPannel#{inner.index}"
										hideEffect="fade" showEvent="click" hideEvent="click"
										onHide="slideIDChangeTableReset#{inner.index}()">
										<h:panelGrid columns="3">
											<p:inputText value="#{stainingRow.staining.slideID}"
												id="slideIDChangeTable#{inner.index}" />
											<p:commandButton value="#{msg['general.save']}"
												actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.staining,true)}"
												oncomplete="PF('slideIDInputPannel#{inner.index}').hide()"></p:commandButton>

											<p:commandButton
												value="#{msg['body.statiningView.idManuallyAltered.reset']}"
												actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.staining,false)}"
												oncomplete="PF('slideIDInputPannel#{inner.index}').hide()" />
										</h:panelGrid>

										<!-- reset on hide -->
										<p:remoteCommand name="slideIDChangeTableReset#{inner.index}"
											process="@this" update="slideIDChangeTable#{inner.index}">
											<p:resetInput target="slideIDChangeTable#{inner.index}" />
										</p:remoteCommand>
									</p:overlayPanel>

								</h:panelGroup>
							</p:column>

							<!-- staining commentary -->
							<p:column styleClass="columnCommentary">
								<h:panelGroup rendered="#{stainingRow.stainingType}">
									<p:selectOneMenu styleClass="smallInput" style="width: 90%"
										value="#{stainingRow.staining.commentary}" editable="true"
										disabled="#{!taskEditable}">

										<f:selectItems
											value="#{receiptlogViewHandlerAction.slideCommentary}"
											var="commentary" itemLabel="#{commentary.value}"
											itemValue="#{commentary.value}" />

										<p:ajax event="change" execute="@this"
											listener="#{diagnosisViewHandlerAction.onDataChange(stainingRow.staining,'log.settings.staining.update')}" />
									</p:selectOneMenu>

								</h:panelGroup>
							</p:column>

							<!-- Staining staining -->
							<p:column styleClass="columnStaining">
								<h:panelGroup rendered="#{stainingRow.stainingType}">
									<h:outputText
										value="#{stainingRow.staining.slidePrototype.name}" />
								</h:panelGroup>
							</p:column>

							<!-- Staining status -->
							<p:column styleClass="columnStatus">
								<!-- Sample status -->
								<h:panelGroup rendered="#{stainingRow.sampleType}">
									<!-- ********** Staining performed ********** -->
									<h:panelGroup
										rendered="#{taskStatusHandler.isStainingCompleted(stainingRow.sample)}">
										<i class="fa fa-fw fa-check-circle icon-green"
											title="#{msg['body.statiningView.status.performed']}" />
									</h:panelGroup>
								</h:panelGroup>
								<!-- Block status -->
								<h:panelGroup rendered="#{stainingRow.blockType}">
									<!-- ********** Staining performed ********** -->
									<h:panelGroup
										rendered="#{taskStatusHandler.isStainingCompleted(stainingRow.block)}">
										<i class="fa fa-fw fa-check-circle icon-green"
											title="#{msg['body.statiningView.status.performed']}" />
									</h:panelGroup>
								</h:panelGroup>

								<!-- Slide status -->
								<h:panelGroup rendered="#{stainingRow.stainingType}">
									<!-- ********** Staining performed ********** -->
									<h:panelGroup
										rendered="#{stainingRow.staining.stainingCompleted}">
										<i class="fa fa-fw fa-check-circle icon-green"
											title="#{msg['body.statiningView.status.performed']}" />
									</h:panelGroup>

									<h:panelGroup rendered="#{stainingRow.staining.reStaining}">
										<i class="fa fa-fw fa-th-list icon-orange"
											title="#{msg['body.statiningView.status.restaining']}" />
									</h:panelGroup>
								</h:panelGroup>
							</p:column>

							<!-- Options -->
							<p:column styleClass="columnOptions">
								<!-- Block -->
								<h:panelGroup rendered="#{stainingRow.blockType}"
									style="float: right">
									<!-- ********** New Staining Button ********** -->
									<p:commandLink title="#{msg['body.statiningView.newStaining']}"
										styleClass="noUnderlineAtLink" disabled="#{!taskEditable}"
										actionListener="#{addSlidesDialogHandler.initAndPrepareBean(stainingRow.block)}">
										<i class="fa fa-fw fa-paint-brush"></i>
									</p:commandLink>
								</h:panelGroup>

								<!-- Staining -->
								<h:panelGroup rendered="#{stainingRow.stainingType}"
									style="float: right">
									<!-- ********** Delete Button ********** -->
									<p:commandLink styleClass="noUnderlineAtLink"
										disabled="#{!taskEditable or true}"
										title="#{msg['body.statiningView.archiveStaining']}"
										actionListener="#{deleteTaskEntityDialog.initAndPrepareBean(stainingRow.staining.task,stainingRow.staining)}">
										<i class="fa fa-fw fa-times-circle" />
									</p:commandLink>
								</h:panelGroup>
							</p:column>
						</p:row>
					</c:forEach>
				</p:panelGrid>
			</p:scrollPanel>
		</div>

		<div class="buttonContainer">
			<h:panelGrid columns="1" style="width:100%"
				styleClass="noBordersAll collapsedBordersAll noPaddingAll">
				<h:panelGrid columns="1" style="float:right;">

					<!-- Close button -->
					<p:commandButton value="#{msg['general.close']}" id="closeBtn"
						styleClass="smallButton buttonRighMarginInList"
						icon="fa fa-check-circle-o">
						<f:actionListener
							binding="#{dialogHandlerAction.favouriteListsDialog.hideDialog()}"></f:actionListener>
					</p:commandButton>
				</h:panelGrid>
			</h:panelGrid>
		</div>
	</h:form>
</h:body>
</html>