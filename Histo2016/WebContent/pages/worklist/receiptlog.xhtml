<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core">

	<ui:include src="common/navigationBar.xhtml"></ui:include>

	<c:set var="taskEditable" scope="session"
		value="#{taskStatusHandler.isTaskEditable(commonDataHandlerAction.selectedTask)}" />

	<p:panel style="width: 60%"
		styleClass="collapsedBorders noPadding noBorders">

		<h:outputLabel
			value="#{msg['body.receiptlog.taskId']} #{commonDataHandlerAction.selectedTask.taskID}"
			style="font-size:1.5em;"></h:outputLabel>

		<h:panelGrid columns="5" style="margin-top:10px;"
			styleClass="defaultListingTableThreeLineContainer">

			<!-- left column -->
			<h:panelGrid columns="2" styleClass="defaultListingTableCss">
				<!-- Receipt Date -->
				<h:outputLabel value="#{msg['body.receiptlog.taskEDate']}" />
				<p:calendar pattern="dd.MM.yyyy" mask="true" id="receiptDate"
					style="width: 80%;background:##{userHandlerAction.currentUser.inputFieldColor};color:##{userHandlerAction.currentUser.inputFieldFontColor}"
					styleClass="smallInput customBackground"
					disabled="#{!taskEditable}"
					value="#{commonDataHandlerAction.selectedTask.dateOfReceiptAsDate}">
					<p:ajax event="dateSelect"
						listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.receiptDate',mainHandlerAction.date(commonDataHandlerAction.selectedTask.dateOfReceiptAsDate))}"
						update="receiptDate" />
					<f:ajax event="change" execute="@this" render="receiptDate"
						listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.receiptDate',mainHandlerAction.date(commonDataHandlerAction.selectedTask.dateOfReceiptAsDate))}" />
				</p:calendar>

				<!-- Termin Date -->
				<h:outputLabel value="#{msg['body.receiptlog.taskDueDate']}" />
				<h:panelGrid columns="2" styleClass="defaultListingTableContainer">
					<p:selectBooleanCheckbox style="padding-right:5px;"
						disabled="#{!taskEditable}" styleClass="smallCheckbox"
						title="#{msg['body.receiptlog.taskDueDate.hint']}"
						value="#{commonDataHandlerAction.selectedTask.dueDateSelected}">
						<p:ajax event="change" execute="@this"
							update="navigationForm contentForm"
							listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.dueDate',commonDataHandlerAction.selectedTask.dueDateSelected)}">
						</p:ajax>
					</p:selectBooleanCheckbox>
					<p:calendar pattern="dd.MM.yyyy" mask="true" id="dueDate"
						style="width: 80%;background:##{userHandlerAction.currentUser.inputFieldColor};color:##{userHandlerAction.currentUser.inputFieldFontColor};"
						styleClass="smallInput customBackground"
						value="#{commonDataHandlerAction.selectedTask.dueDateAsDate}"
						disabled="#{!commonDataHandlerAction.selectedTask.dueDateSelected or !taskEditable}">
						<p:ajax event="dateSelect"
							listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.dueDate.date', mainHandlerAction.date(commonDataHandlerAction.selectedTask.dueDateAsDate))}"
							update="dueDate" />
						<f:ajax event="change" execute="@this" render="dueDate"
							listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.dueDate.date', mainHandlerAction.date(commonDataHandlerAction.selectedTask.dueDateAsDate))}" />
					</p:calendar>
				</h:panelGrid>

				<!-- ward -->
				<h:outputLabel value="#{msg['body.diagnosis.ward']}" />
				<p:selectOneMenu id="wards"
					value="#{commonDataHandlerAction.selectedTask.ward}"
					style="width: 80%;background:##{userHandlerAction.currentUser.inputFieldColor};color:##{userHandlerAction.currentUser.inputFieldFontColor};"
					styleClass="smallInput customBackground" editable="true"
					disabled="#{!taskEditable}">
					<f:selectItems value="#{diagnosisViewHandlerAction.wardList}"
						itemValue="#{ward.value}" itemLabel="#{ward.value}" var="ward" />
					<p:ajax event="change" execute="@this"
						listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.ward', commonDataHandlerAction.selectedTask.ward)}" />
				</p:selectOneMenu>

				<!-- History -->
				<h:outputLabel value="#{msg['body.receiptlog.story']}" />
				<p:selectOneMenu id="historyText"
					style="width: auto;width: 80%;background:##{userHandlerAction.currentUser.inputFieldColor};color:##{userHandlerAction.currentUser.inputFieldFontColor};"
					styleClass="smallInput customBackground"
					value="#{commonDataHandlerAction.selectedTask.caseHistory}"
					disabled="#{!taskEditable}" editable="true">
					<f:selectItem itemLabel="Select One"
						itemValue="#{msg['body.diagnosis.story.watermark']}" />
					<f:selectItems
						value="#{diagnosisViewHandlerAction.caseHistoryList}" var="item"
						itemLabel="#{item.value}" itemValue="#{item.value}" />

					<p:ajax event="change" execute="@this"
						listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.caseHistory',commonDataHandlerAction.selectedTask.caseHistory)}" />
				</p:selectOneMenu>

				<!-- EYE -->
				<h:outputLabel value="#{msg['body.receiptlog.eye']}" />
				<p:selectOneMenu
					style="width: 80%;background:##{userHandlerAction.currentUser.inputFieldColor};color:##{userHandlerAction.currentUser.inputFieldFontColor};"
					styleClass="smallInput customBackground"
					value="#{commonDataHandlerAction.selectedTask.eye}"
					disabled="#{!taskEditable}">

					<f:selectItems value="#{enumProvider.eyes}" var="eye"
						itemLabel="#{msg['enum.eye.'.concat(eye)]}" itemValue="#{eye}" />

					<p:ajax event="change" execute="@this"
						listener="#{diagnosisViewHandlerAction.onDataChange(commonDataHandlerAction.selectedTask,'log.patient.task.change.eye',commonDataHandlerAction.selectedTask.eye)}" />
				</p:selectOneMenu>

				<!-- other -->
				<h:outputLabel value="#{msg['body.receiptlog.miscellaneous']}" />
				<h:panelGroup>
					<p:commandButton icon="fa fa-fw fa-taxi" disabled="true"
						title="#{msg['body.receiptlog.miscellaneous.borrow']}" />
					<p:commandButton icon="fa fa-fw fa-dollar" disabled="true"
						actionListener="#{mainHandlerAction.showDialog('WORKLIST_ACCOUNTING')}"
						title="#{msg['body.receiptlog.miscellaneous.accounting']}" />
				</h:panelGroup>
			</h:panelGrid>
			<!-- left column -->

			<h:panelGroup />

			<!-- middle column -->
			<h:panelGrid columns="1" styleClass="defaultListingTableCssOneCol">
				<!-- material -->
				<p:outputLabel value="#{msg['body.receiptlog.material']}"
					styleClass="big-text" />
				<h:panelGrid columns="1" styleClass="defaultListingTableContainer">
					<c:forEach items="#{commonDataHandlerAction.selectedTask.samples}"
						var="sample" varStatus="loopCount">

						<h:panelGrid columns="3" styleClass="defaultListingTableContainer">
							<h:outputLabel
								value="#{msg['body.diagnosis.diagnosis.sample']} #{sample.sampleID}" />

							<p:inputText value="#{sample.material}"
								disabled="#{!taskEditable}"
								style="margin-left:10px;background:##{userHandlerAction.currentUser.inputFieldColor};color:##{userHandlerAction.currentUser.inputFieldFontColor};"
								styleClass="smallInput customBackground" />

							<p:commandLink
								title="#{msg['body.receiptlog.notification.hint']}"
								disabled="#{!taskEditable}"
								actionListener="#{dialogHandlerAction.changeMaterialDialog.initAndPrepareBean(sample)}">
								<i class="fa fa-fw fa-cog" />
								<p:ajax event="dialogReturn" update="navigationForm contentForm" />
							</p:commandLink>
						</h:panelGrid>
					</c:forEach>
				</h:panelGrid>
			</h:panelGrid>
			<!-- middle column -->

			<h:panelGroup />

			<!-- right column -->
			<h:panelGrid columns="1" styleClass="defaultListingTableContainer">
				<h:panelGrid columns="2" styleClass="defaultListingTableCssOneCol">
					<!-- contact -->
					<h:outputLabel value="#{msg['body.receiptlog.notification']}"
						styleClass="big-text" />
					<h:panelGrid columns="3" style="float: right">
						<!-- quickContact surgeon -->
						<p:commandLink
							title="#{msg['body.receiptlog.notification.surgeon.hint']}"
							actionListener="#{dialogHandlerAction.contactSelectDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask,'SURGEON')}">
							<i class="fa fa-fw fa-scissors" />
							<p:ajax event="dialogReturn" update="navigationForm contentForm" />
						</p:commandLink>

						<!-- quickcontact private physician  -->
						<p:commandLink
							title="#{msg['body.receiptlog.notification.ophthalmologist.hint']}"
							actionListener="#{dialogHandlerAction.contactSelectDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask,'PRIVATE_PHYSICIAN')}">
							<i class="fa fa-fw fa-eye" />
							<p:ajax event="dialogReturn" update="navigationForm contentForm" />
						</p:commandLink>

						<!-- edit contacts -->
						<p:commandLink title="#{msg['body.receiptlog.notification.hint']}"
							actionListener="#{dialogHandlerAction.contactDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask)}">
							<i class="fa fa-fw fa-cog" />
							<p:ajax event="dialogReturn" update="navigationForm contentForm" />
						</p:commandLink>
					</h:panelGrid>
				</h:panelGrid>

				<p:dataTable var="contact" scrollable="true" scrollHeight="90"
					style="width:350px"
					styleClass="smallDatatable highlightedDataTable noBordersAll"
					value="#{commonDataHandlerAction.selectedTask.contacts}">

					<p:column>
						<f:facet name="header">
							<h:outputLabel value="#{msg['body.receiptlog.contact.name']}" />
						</f:facet>
						<h:outputLabel value="#{contact.person.fullName}" />
					</p:column>

					<p:column headerText="">
						<f:facet name="header">
							<h:outputLabel value="#{msg['body.receiptlog.contact.role']}" />
						</f:facet>
						<h:outputLabel
							value="#{msg['enum.contactRole.'.concat(contact.role)]}"
							title="#{msg['enum.contactRole.'.concat(contact.role)]}">
							<f:converter converterId="org.histo.ui.TruncateConverter" />
							<f:attribute name="truncateAt" value="15" />
							<f:attribute name="continuationMark" value="..." />
						</h:outputLabel>
					</p:column>

					<p:column style="width:15px">
						<f:facet name="header">
							<i class="fa fa-check-square-o"
								title="#{msg['body.receiptlog.contact.type.performed']}" />
						</f:facet>
						<ui:fragment rendered="#{contact.notificationPerformed}">
							<i class="fa fa-check icon-green" />
						</ui:fragment>
					</p:column>
				</p:dataTable>
			</h:panelGrid>
			<!-- right column -->
		</h:panelGrid>

		<!-- Slides -->
		<h:panelGrid columns="1" styleClass="defaultListingTableCssOneCol">
			<!-- healinse -->
			<h:panelGroup>
				<h:outputLabel value="#{msg['body.receiptlog.slide.name']}"
					style="font-size:1.2em !important;"></h:outputLabel>
				<!-- staining completed -->
				<h:panelGroup
					rendered="#{taskStatusHandler.isStainingCompleted(commonDataHandlerAction.selectedTask)}">
					<div class="fa fa-check-circle icon-green"
						title="#{msg['body.receiptlog.slide.completed']}" />
				</h:panelGroup>
				<!-- staining to perform -->
				<h:panelGroup
					rendered="#{!taskStatusHandler.isStainingCompleted(commonDataHandlerAction.selectedTask) and !taskStatusHandler.isReStainingFlag(commonDataHandlerAction.selectedTask)}">
					<div class="fa fa-exclamation-circle icon-orange"
						title="#{msg['body.receiptlog.slide.staining']}" />
				</h:panelGroup>
				<!-- restaining to perform -->
				<h:panelGroup
					rendered="#{!taskStatusHandler.isStainingCompleted(commonDataHandlerAction.selectedTask) and taskStatusHandler.isReStainingFlag(commonDataHandlerAction.selectedTask)}">
					<div class="fa fa-exclamation-circle ic-custom icon-orange"
						title="#{msg['body.receiptlog.slide.restaining']}" />
				</h:panelGroup>
			</h:panelGroup>


			<!-- ******************************** Slides ******************************** -->
			<p:panelGrid styleClass="stainingTable highlightedDataTable">
				<f:facet name="header">
					<p:row>
						<p:column styleClass="columnSample">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.sample']}"></h:outputLabel>
						</p:column>
						<p:column styleClass="columnBlock">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.block']}"></h:outputLabel>
						</p:column>
						<p:column styleClass="columnChoose"></p:column>
						<p:column styleClass="columnStainingID">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.staining.id']}"></h:outputLabel>
						</p:column>
						<p:column styleClass="columnCommentary">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.staining.commentary']}"></h:outputLabel>
						</p:column>
						<p:column styleClass="columnStaining">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.staining.staining']}"></h:outputLabel>
						</p:column>
						<p:column styleClass="columnStatus">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.status']}"></h:outputLabel>
						</p:column>
						<p:column styleClass="columnOptions">
							<h:outputLabel
								value="#{msg['body.receiptlog.slide.headline.options']}"></h:outputLabel>
							<p:commandLink styleClass="noUnderlineAtLink"
								id="quickTaskSettings"
								actionListener="#{slideNamingDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask)}">
								<i class="fa fa-wrench" />
								<p:ajax event="dialogReturn" update="navigationForm contentForm" />
							</p:commandLink>

						</p:column>
					</p:row>
				</f:facet>

				<c:forEach varStatus="inner"
					items="#{commonDataHandlerAction.selectedTask.stainingTableRows}"
					var="stainingRow">
					<p:row styleClass="#{stainingRow.even ? 'ui-datatable-odd' : ''}">

						<!-- Sample -->
						<p:column styleClass="columnSample">
							<h:panelGroup rendered="#{stainingRow.sampleType}">

								<h:panelGroup id="sampleIDInput#{inner.index}" layout="block"
									style="width: 90%; min-height:20px">
									<h:outputLabel
										value="#{msg['body.receiptlog.slide.sample']} #{stainingRow.sample.sampleID}" />

									<h:panelGroup
										rendered="#{stainingRow.sample.idManuallyAltered}">
										<i class="fa fa-fw fa-chain"
											title="#{msg['body.statiningView.idManuallyAltered']}" />
									</h:panelGroup>
								</h:panelGroup>

								<p:overlayPanel for="sampleIDInput#{inner.index}"
									showEffect="fade" widgetVar="sampleIDInputPannel#{inner.index}"
									hideEffect="fade" showEvent="click" hideEvent="click"
									onHide="sampleIDChangeTableReset#{inner.index}()">
									<h:panelGrid columns="3">
										<p:inputText value="#{stainingRow.sample.sampleID}"
											id="sampleIDChangeTable#{inner.index}" />

										<p:commandButton value="#{msg['general.save']}"
											update="contentForm"
											actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.sample,true)}"
											oncomplete="PF('sampleIDInputPannel#{inner.index}').hide()" />

										<p:commandButton
											value="#{msg['body.statiningView.idManuallyAltered.reset']}"
											update="contentForm"
											actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.sample,false)}"
											oncomplete="PF('sampleIDInputPannel#{inner.index}').hide()" />

									</h:panelGrid>

									<!-- reset on hide -->
									<p:remoteCommand name="sampleIDChangeTableReset#{inner.index}"
										process="@this" update="sampleIDChangeTable#{inner.index}">
										<p:resetInput target="sampleIDChangeTable#{inner.index}" />
									</p:remoteCommand>
								</p:overlayPanel>
							</h:panelGroup>
						</p:column>

						<!-- Block -->
						<p:column styleClass="columnBlock">
							<h:panelGroup rendered="#{stainingRow.blockType}">

								<h:panelGroup id="blockIDInput#{inner.index}" layout="block"
									style="width: 90%; min-height:20px">
									<h:outputLabel
										value="#{msg['body.receiptlog.slide.block']} #{stainingRow.block.blockID}" />
									<h:panelGroup rendered="#{stainingRow.block.idManuallyAltered}">
										<i class="fa fa-fw fa-chain"
											title="#{msg['body.statiningView.idManuallyAltered']}" />
									</h:panelGroup>

								</h:panelGroup>
								<p:overlayPanel for="blockIDInput#{inner.index}"
									onHide="blockIDChangeTableReset#{inner.index}()"
									showEffect="fade" widgetVar="blockIDInputPannel#{inner.index}"
									hideEffect="fade" showEvent="click" hideEvent="click">
									<h:panelGrid columns="3">
										<p:inputText value="#{stainingRow.block.blockID}"
											id="blockIDChangeTable#{inner.index}" />
										<p:commandButton value="#{msg['general.save']}"
											update="contentForm"
											actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.block,true)}"
											oncomplete="PF('blockIDInputPannel#{inner.index}').hide()" />

										<p:commandButton
											value="#{msg['body.statiningView.idManuallyAltered.reset']}"
											update="contentForm"
											actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.block,false)}"
											oncomplete="PF('blockIDInputPannel#{inner.index}').hide()"></p:commandButton>
									</h:panelGrid>

									<!-- reset on hide -->
									<p:remoteCommand name="blockIDChangeTableReset#{inner.index}"
										process="@this" update="blockIDChangeTable#{inner.index}">
										<p:resetInput target="blockIDChangeTable#{inner.index}" />
									</p:remoteCommand>
								</p:overlayPanel>
							</h:panelGroup>
						</p:column>

						<!-- Staining chooser -->
						<p:column styleClass="columnChoose">
							<h:panelGroup
								rendered="#{stainingRow.sampleType or stainingRow.blockType}">
								<p:commandLink
									actionListener="#{receiptlogViewHandlerAction.toggleChildrenChoosenFlag(stainingRow)}"
									update="contentForm"
									title="#{stainingRow.sampleType ? msg['body.statiningView.chooseSample'] : msg['body.statiningView.chooseBlock']}">
									<i class="fa fa-fw fa-check-circle" />
								</p:commandLink>
							</h:panelGroup>
							<h:panelGroup rendered="#{stainingRow.stainingType}">
								<p:selectBooleanCheckbox value="#{stainingRow.choosen}" />
							</h:panelGroup>
						</p:column>

						<!-- Staining Name -->
						<p:column styleClass="columnStainingID">
							<h:panelGroup rendered="#{stainingRow.stainingType}">

								<h:panelGroup id="slideIDInput#{inner.index}" layout="block"
									style="width: 90%; min-height:20px">

									<h:outputLabel value="#{stainingRow.staining.slideID}" />

									<h:panelGroup
										rendered="#{stainingRow.staining.idManuallyAltered}">
										<i class="fa fa-fw fa-chain"
											title="#{msg['body.statiningView.idManuallyAltered']}" />
									</h:panelGroup>

								</h:panelGroup>

								<p:overlayPanel for="slideIDInput#{inner.index}"
									showEffect="fade" widgetVar="slideIDInputPannel#{inner.index}"
									hideEffect="fade" showEvent="click" hideEvent="click"
									onHide="slideIDChangeTableReset#{inner.index}()">
									<h:panelGrid columns="3">
										<p:inputText value="#{stainingRow.staining.slideID}"
											id="slideIDChangeTable#{inner.index}" />
										<p:commandButton value="#{msg['general.save']}"
											update="contentForm"
											actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.staining,true)}"
											oncomplete="PF('slideIDInputPannel#{inner.index}').hide()"></p:commandButton>

										<p:commandButton
											value="#{msg['body.statiningView.idManuallyAltered.reset']}"
											update="contentForm"
											actionListener="#{receiptlogViewHandlerAction.entityIDmanuallyAltered(stainingRow.staining,false)}"
											oncomplete="PF('slideIDInputPannel#{inner.index}').hide()" />
									</h:panelGrid>

									<!-- reset on hide -->
									<p:remoteCommand name="slideIDChangeTableReset#{inner.index}"
										process="@this" update="slideIDChangeTable#{inner.index}">
										<p:resetInput target="slideIDChangeTable#{inner.index}" />
									</p:remoteCommand>
								</p:overlayPanel>

							</h:panelGroup>
						</p:column>

						<!-- staining commentary -->
						<p:column styleClass="columnCommentary">
							<h:panelGroup rendered="#{stainingRow.stainingType}">
								<p:selectOneMenu styleClass="smallInput" style="width: 90%"
									value="#{stainingRow.staining.commentary}" editable="true"
									disabled="#{!taskEditable}">

									<f:selectItems value="#{receiptlogViewHandlerAction.slideCommentary}" var="commentary"
										itemLabel="#{commentary.value}" itemValue="#{commentary.value}" />

									<p:ajax event="change" execute="@this"
										listener="#{diagnosisViewHandlerAction.onDataChange(stainingRow.staining,'log.settings.staining.update')}" />
								</p:selectOneMenu>

							</h:panelGroup>
						</p:column>

						<!-- Staining staining -->
						<p:column styleClass="columnStaining">
							<h:panelGroup rendered="#{stainingRow.stainingType}">
								<h:outputText
									value="#{stainingRow.staining.slidePrototype.name}" />
							</h:panelGroup>
						</p:column>

						<!-- Staining status -->
						<p:column styleClass="columnStatus">
							<!-- Sample status -->
							<h:panelGroup rendered="#{stainingRow.sampleType}">
								<!-- ********** Staining performed ********** -->
								<h:panelGroup
									rendered="#{taskStatusHandler.isStainingCompleted(stainingRow.sample)}">
									<i class="fa fa-fw fa-check-circle icon-green"
										title="#{msg['body.statiningView.status.performed']}" />
								</h:panelGroup>
							</h:panelGroup>
							<!-- Block status -->
							<h:panelGroup rendered="#{stainingRow.blockType}">
								<!-- ********** Staining performed ********** -->
								<h:panelGroup
									rendered="#{taskStatusHandler.isStainingCompleted(stainingRow.block)}">
									<i class="fa fa-fw fa-check-circle icon-green"
										title="#{msg['body.statiningView.status.performed']}" />
								</h:panelGroup>
							</h:panelGroup>

							<!-- Slide status -->
							<h:panelGroup rendered="#{stainingRow.stainingType}">
								<!-- ********** Staining performed ********** -->
								<h:panelGroup
									rendered="#{stainingRow.staining.stainingCompleted}">
									<i class="fa fa-fw fa-check-circle icon-green"
										title="#{msg['body.statiningView.status.performed']}" />
								</h:panelGroup>

								<h:panelGroup rendered="#{stainingRow.staining.reStaining}">
									<i class="fa fa-fw fa-th-list icon-orange"
										title="#{msg['body.statiningView.status.restaining']}" />
								</h:panelGroup>
							</h:panelGroup>
						</p:column>

						<!-- Options -->
						<p:column styleClass="columnOptions">
							<!-- Sample -->
							<h:panelGroup rendered="#{stainingRow.sampleType}"
								style="float: right">
								<!-- ********** New Block Button ********** -->
								<p:commandLink title="#{msg['body.statiningView.newBlock']}"
									styleClass="noUnderlineAtLink" disabled="#{!taskEditable}"
									update="navigationForm contentForm"
									actionListener="#{diagnosisViewHandlerAction.createNewBlock(stainingRow.sample)}">
									<i class="fa fa-fw fa-th-large"></i>
								</p:commandLink>
								<!-- ********** Delete Button ********** -->
								<p:commandLink styleClass="noUnderlineAtLink"
									title="#{msg['body.statiningView.archiveSample']}"
									disabled="#{!taskEditable}"
									actionListener="#{deleteTaskEntityDialog.initAndPrepareBean(stainingRow.sample.task,stainingRow.sample)}">
									<i class="fa fa-fw fa-times-circle"></i>
									<p:ajax event="dialogReturn"
										update="navigationForm contentForm" />
								</p:commandLink>
							</h:panelGroup>

							<!-- Block -->
							<h:panelGroup rendered="#{stainingRow.blockType}"
								style="float: right">
								<!-- ********** New Staining Button ********** -->
								<p:commandLink title="#{msg['body.statiningView.newStaining']}"
									styleClass="noUnderlineAtLink" disabled="#{!taskEditable}"
									actionListener="#{addSlidesDialogHandler.initAndPrepareBean(stainingRow.block)}">
									<i class="fa fa-fw fa-paint-brush"></i>
									<p:ajax event="dialogReturn"
										update="navigationForm contentForm" />
								</p:commandLink>
								<!-- ********** Delete Button ********** -->
								<p:commandLink styleClass="noUnderlineAtLink"
									disabled="#{!taskEditable}"
									title="#{msg['body.statiningView.archiveBlock']}"
									actionListener="#{deleteTaskEntityDialog.initAndPrepareBean(stainingRow.block.task,stainingRow.block)}">
									<i class="fa fa-fw fa-times-circle"></i>
									<p:ajax event="dialogReturn"
										update="navigationForm contentForm" />
								</p:commandLink>
							</h:panelGroup>

							<!-- Staining -->
							<h:panelGroup rendered="#{stainingRow.stainingType}"
								style="float: right">
								<!-- ********** Print Button ********** -->
								<p:commandLink styleClass="noUnderlineAtLink"
									actionListener="#{receiptlogViewHandlerAction.printLableForSlide(stainingRow.staining)}"
									title="#{msg['body.statiningView.printStaining']}">
									<i class="fa fa-fw fa-print" />
									<p:ajax event="dialogReturn"
										update="navigationForm contentForm" />
								</p:commandLink>
								<!-- ********** Cloud Button ********** -->
								<p:commandLink styleClass="noUnderlineAtLink"
									title="#{msg['body.statiningView.showStaining']}">
									<i class="fa fa-fw fa-file-photo-o" />
									<p:ajax event="dialogReturn"
										update="navigationForm contentForm" />
								</p:commandLink>
								<!-- ********** Delete Button ********** -->
								<p:commandLink styleClass="noUnderlineAtLink"
									disabled="#{!taskEditable}"
									title="#{msg['body.statiningView.archiveStaining']}"
									actionListener="#{deleteTaskEntityDialog.initAndPrepareBean(stainingRow.staining.task,stainingRow.staining)}">
									<i class="fa fa-fw fa-times-circle" />
									<p:ajax event="dialogReturn"
										update="navigationForm contentForm" />
								</p:commandLink>
							</h:panelGroup>
						</p:column>
					</p:row>
				</c:forEach>
			</p:panelGrid>

			<h:panelGrid columns="5" style="margin-top:10px;">

				<!-- New sample -->
				<p:commandButton icon="fa fa-fw fa-plus-circle"
					styleClass="taskButton" disabled="#{!taskEditable}"
					value="#{msg['body.statiningView.newSample']}"
					actionListener="#{createSampleDialog.initAndPrepareBean(commonDataHandlerAction.selectedTask)}">
					<p:ajax event="dialogReturn" update="navigationForm contentForm" />
				</p:commandButton>

				<p:commandButton icon="fa fa-fw fa-check-circle"
					disabled="#{!taskEditable}" update="contentForm"
					value="#{msg['body.statiningView.chooseAll']}"
					actionListener="#{receiptlogViewHandlerAction.setListAsChoosen(commonDataHandlerAction.selectedTask.stainingTableRows,true)}" />

				<h:outputLabel value="#{msg['body.statiningView.choosenElements']}"
					style="margin-left:20px;"></h:outputLabel>
				<h:panelGroup>
					<p:selectOneMenu
						value="#{receiptlogViewHandlerAction.actionOnMany}"
						disabled="#{!taskEditable}"
						onchange="PF('performOnMay').jq.click();">

						<f:selectItems value="#{enumProvider.stainingListActions}"
							var="action"
							itemLabel="#{msg['enum.stainingListAction.'.concat(action)]}" />

					</p:selectOneMenu>

					<p:commandButton id="changeZone" widgetVar="performOnMay"
						style="display:none;"
						update="navigationForm contentForm headerForm"
						actionListener="#{receiptlogViewHandlerAction.performActionOnMany(commonDataHandlerAction.selectedTask)}">
						<p:ajax event="dialogReturn"
							update="navigationForm contentForm headerForm" />
					</p:commandButton>
				</h:panelGroup>
			</h:panelGrid>
			<!-- ******************************** Slides ******************************** -->
		</h:panelGrid>
	</p:panel>

</ui:composition>
